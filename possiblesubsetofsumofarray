#include <stdio.h>

void printSubset(int subset[], int length) {
    printf("{");
    for (int i = 0; i < length; i++) {
        printf("%d", subset[i]);
        if (i < length - 1) {
            printf(", ");
        }
    }
    printf("}\n");
}

void findSubsets(int arr[], int start, int end, int subset[], int index, int target) {
    if (target == 0) {
        printSubset(subset, index);
        return;
    }

    for (int i = start; i <= end; i++) {
        if (arr[i] <= target) {
            subset[index] = arr[i];
            findSubsets(arr, i + 1, end, subset, index + 1, target - arr[i]);
        }
    }
}

int main() {
    int arr[] = {2, 3, 5, 8, 10};
    int n = sizeof(arr) / sizeof(arr[0]);
    int subset[100]; // Maximum length of the subset
    int target = 10;

    printf("Output:\n");
    findSubsets(arr, 0, n - 1, subset, 0, target);

    return 0;
}


/**
Print all the possible subsets of array which adds up to give a sum.
Input: array{2, 3, 5, 8, 10}
       sum=10
Output: {2, 3, 5}
       {2, 8}
       {10}
*/
/*#include <stdio.h>
#include <string.h>
int substring(int a[],int f,int e,int substring[]);

int fun(int a[],int i,int target){
    int substring[50];
    int sum=0;
    if(a[i]==sum){
        substring(a,i-1,i+1,substring);
    }
    
return fun(a,i+1);
}

int substring(int a[],int f,int e,int substring[]){
    for(int i=0;i<e;i++){
        substring[i]=a[f+i];
    }
}

int main()
{
    int a[]={2,3,5,8,10};
    int l=sizeof(a)/sizeof(int);
    int target=10,i=0;
    fun(a,i,target);
}*/

